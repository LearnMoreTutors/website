suppressWarnings(library(dplyr))
suppressWarnings(library(ggplot2))
suppressWarnings(library(scales))
suppressWarnings(library(lubridate))
suppressWarnings(library(xtable))
# Load your data and prepare it as described in the previous code
data <- read.csv('/Users/ethanbidna/Dropbox/Fitness/Strong Data/strong.csv')
data <- data %>%
filter(Workout.Name %in% c("A", "B"))
# Define your circuits and create the report
circuit1_exercises <- c("Squat (Barbell)", "Bench Press (Barbell)", "Inverted Sit-Up W/Rotation")
circuit2_exercises <- c("Seated Overhead Press (Dumbbell)", "Lunge (Barbell)", "Hanging Leg Raise")
# Calculate the count of days visited and average days per week
data$Date <- as.Date(data$Date)
data$Week <- lubridate::week(data$Date)
# Find the earliest week for re-indexing
earliest_week <- min(data$Week)
# Re-index weeks before further calculations
data <- data %>%
mutate(Week = Week - (earliest_week - 1))
count_of_days_visited <- n_distinct(data$Date)
average_days_per_week <- count_of_days_visited / max(data$Week)
# Create a summary table
summary_table <- data %>%
filter(Week == max(Week)) %>%
group_by(Workout.Name, Exercise.Name, Weight) %>%
summarise(AvgReps = mean(Reps))
# Create a LaTeX-compatible table
summary_table_latex <- xtable(summary_table, caption = "Workout Results This Week")
# Apply custom column names
colnames(summary_table_latex) <- c("Workout Name", "Exercise Name", "Weight", "Avg Reps")
# Use `print.xtable` to render the LaTeX table
print.xtable(summary_table_latex, include.rownames = FALSE, booktabs = TRUE)
#cat("Count of Days Visited in the Most Recent Week: ", count_of_days_visited, "\n")
#cat("Average Days Visited per Week: ", round(average_days_per_week, 2), "\n")
attendance_summary <- data %>%
group_by(Week) %>%
summarise(Attendance = n_distinct(Date))
attendance_chart <- ggplot(attendance_summary, aes(x = Week, y = Attendance)) +
geom_bar(stat = "identity", fill = "green", alpha = 0.5) +
labs(title = "Attendance Summary", x = "Week", y = "Days Attended") +
theme_minimal() +
scale_x_continuous(breaks = pretty_breaks(n = 10))
# Save the attendance chart as a PNG image
image_dir <- normalizePath("~/Desktop")
attendance_image_path <- file.path(image_dir, "attendance_chart.png")
ggsave(attendance_image_path, plot = attendance_chart, width = 6, height = 4, dpi = 300)
image_dir <- "/Users/ethanbidna/Dropbox/Fitness/Strong Data/trends_charts"
# Create trend charts for each exercise and save them as PNG files
for (exercise in unique(data$Exercise.Name)) {
exercise_data <- data %>%
filter(Exercise.Name == exercise) %>%
group_by(Week, Workout.Name, Exercise.Name) %>%
summarise(AvgReps = mean(Reps), AvgWeight = mean(Weight))
min_reps <- 0
max_reps <- max(exercise_data$AvgReps) + 5
min_weight <- min(exercise_data$AvgWeight) - 10
max_weight <- max(exercise_data$AvgWeight) + 10
trend_chart <- ggplot(exercise_data, aes(x = Week)) +
geom_line(aes(y = AvgReps, color = "Average Repetitions")) +
geom_text(aes(label = paste(round(AvgWeight, 2), "lbs"), y = AvgReps), hjust = 0, vjust = -0.5, size = 3) +
labs(title = paste("Trend Chart for", exercise), x = "Week", y = "Average Repetitions") +
scale_color_manual(values = c("Average Repetitions" = "blue")) +
theme_minimal()
# Save the chart as a PNG file
# Replace slashes in exercise names with underscores
exercise_safe_name <- gsub("/", "_", exercise)
# Save the chart as a PNG file
chart_filename <- file.path(image_dir, paste0("trend_chart_", exercise_safe_name, ".png"))
ggsave(chart_filename, plot = trend_chart, width = 6, height = 4, dpi = 300)
}
# Load your data and prepare it as described in the previous code
data <- read.csv('/Users/ethanbidna/Dropbox/Fitness/Strong Data/strong.csv')
data <- data %>%
filter(Workout.Name %in% c("A", "B"))
# Define your circuits and create the report
circuit1_exercises <- c("Squat (Barbell)", "Bench Press (Barbell)", "Inverted Sit-Up W/Rotation")
circuit2_exercises <- c("Seated Overhead Press (Dumbbell)", "Lunge (Barbell)", "Hanging Leg Raise")
# Calculate the count of days visited and average days per week
data$Date <- as.Date(data$Date)
data$Week <- lubridate::week(data$Date)
# Find the earliest week for re-indexing
earliest_week <- min(data$Week)
# Re-index weeks before further calculations
data <- data %>%
mutate(Week = Week - (earliest_week - 1))
count_of_days_visited <- n_distinct(data$Date)
average_days_per_week <- count_of_days_visited / max(data$Week)
# Create a summary table
summary_table <- data %>%
filter(Week == max(Week)) %>%
group_by(Workout.Name, Exercise.Name, Weight) %>%
summarise(AvgReps = mean(Reps))
attendance_summary <- data %>%
group_by(Week) %>%
summarise(Attendance = n_distinct(Date))
exercise_data <- data %>%
filter(Exercise.Name == exercise) %>%
group_by(Week, Workout.Name, Exercise.Name) %>%
summarise(AvgReps = mean(Reps), AvgWeight = mean(Weight))
# Load your data and prepare it as described in the previous code
data <- read.csv('/Users/ethanbidna/Dropbox/Fitness/Strong Data/strong.csv')
data <- data %>%
filter(Workout.Name %in% c("A", "B"))
# Define your circuits and create the report
circuit1_exercises <- c("Squat (Barbell)", "Bench Press (Barbell)", "Inverted Sit-Up W/Rotation")
circuit2_exercises <- c("Seated Overhead Press (Dumbbell)", "Lunge (Barbell)", "Hanging Leg Raise")
# Calculate the count of days visited and average days per week
data$Date <- as.Date(data$Date)
data$Week <- lubridate::week(data$Date)
# Find the earliest week for re-indexing
earliest_week <- min(data$Week)
# Re-index weeks before further calculations
data <- data %>%
mutate(Week = Week - (earliest_week - 1))
count_of_days_visited <- n_distinct(data$Date)
average_days_per_week <- count_of_days_visited / max(data$Week)
# Create a summary table
summary_table <- data %>%
filter(Week == max(Week)) %>%
group_by(Workout.Name, Exercise.Name, Weight) %>%
summarise(AvgReps = mean(Reps))
attendance_summary <- data %>%
group_by(Week) %>%
summarise(Attendance = n_distinct(Date))
exercise_data <- data %>%
group_by(Week, Workout.Name, Exercise.Name) %>%
summarise(AvgReps = mean(Reps), AvgWeight = mean(Weight))
View(exercise_data)
install.packages("googlesheets4")
gs4_auth()
library(googlesheets4)
gs4_auth()
workout_data <- gs4_get("https://docs.google.com/spreadsheets/d/130SOpZqnAAAKDUJ8vZX3pAFxDPUO7cISdc8cnbxAYOQ/edit?usp=sharing")
data_list <- list(data, summary_table, attendance_summary, exercise_data)
sheet_names <- c("Data", "SummaryTable", "AttendanceSummary", "ExerciseData")
# Write each data frame to a separate sheet
walk2(data_list, sheet_names, ~write_sheet(.x, my_sheet, sheet = .y, range = "A1", overwrite = TRUE))
library(purrr)
# Write each data frame to a separate sheet
purrr::walk2(data_list, sheet_names, ~write_sheet(.x, my_sheet, sheet = .y, range = "A1", overwrite = TRUE))
walk2(data_list, sheet_names, ~write_sheet(.x, my_sheet, sheet = .y))
# Write each data frame to a separate sheet
walk2(data_list, sheet_names, ~write_sheet(.x, workout_data, sheet = .y))
View(summary_table)
View(data)
View(data)
#Libraries
library(googlesheets4)
library(purrr)
# Load your data and prepare it as described in the previous code
data <- read.csv('/Users/ethanbidna/Dropbox/Fitness/Strong Data/strong.csv')
data <- data %>%
filter(Workout.Name %in% c("A", "B"))
# Define your circuits and create the report
circuit1_exercises <- c("Squat (Barbell)", "Bench Press (Barbell)", "Inverted Sit-Up W/Rotation")
circuit2_exercises <- c("Seated Overhead Press (Dumbbell)", "Lunge (Barbell)", "Hanging Leg Raise")
# Calculate the count of days visited and average days per week
data$Date <- as.Date(data$Date)
data$Week <- lubridate::week(data$Date)
# Find the earliest week for re-indexing
earliest_week <- min(data$Week)
# Re-index weeks before further calculations
data <- data %>%
mutate(Week = Week - (earliest_week - 1))
# Create or open Google Sheet
workout_data <- gs4_get("https://docs.google.com/spreadsheets/d/130SOpZqnAAAKDUJ8vZX3pAFxDPUO7cISdc8cnbxAYOQ/edit?usp=sharing")
write_sheet(data = data, ss = workout_data, sheet=  "Data")
